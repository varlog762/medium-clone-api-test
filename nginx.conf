events {}

http {
    server {
        listen 443 ssl;
        server_name api.greg-p.keenetic.pro;

        ssl_certificate /etc/nginx/certs/keenetic_cert.pem;
        ssl_certificate_key /etc/nginx/certs/keenetic_key.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://host.docker.internal:3001; # Адрес API
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, DELETE, PUT';
            add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
        }

        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, DELETE, PUT';
            add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
            return 204;
        }
    }

    server {
        listen 80;
        server_name api.greg-p.keenetic.pro;
        return 301 https://$host$request_uri;
    }
}